class Solution {
public:
    void fillsieve(vector<bool>& sieve) {
        int n = sieve.size() - 1;
        for (int i = 2; i * i <= n; i++) {
            if (sieve[i]) {
                for (int j = i * i; j <= n; j += i) {
                    sieve[j] = false;
                }
            }
        }
    }

    int countPrimes(int n) {
        if (n <= 2) return 0;
        n = n - 1;
        int count = 0;
        vector<bool> sieve(n + 1, true);  // true means prime, false means not prime
        fillsieve(sieve);
        sieve[0] = false;
        sieve[1] = false;
        for (int i = 2; i <= n; i++) {
            if (sieve[i]) count++;
        }
        return count;
    }
};
