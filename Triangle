class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n = triangle.size();
        if (n == 0) return 0;
        for (int i = 1; i < n; i++) {
            for (int j = 0; j <= i; j++) {
             
                if (j == 0) {
                    triangle[i][j] += triangle[i - 1][j];
                }
                else if (j == i) {
                    triangle[i][j] += triangle[i - 1][j - 1];
                }
                else {
                    triangle[i][j] += min(triangle[i - 1][j - 1], triangle[i - 1][j]);
                }
            }
        }

        // Find the minimum path sum in the last row
        int result = INT_MAX;
        for (int j = 0; j < n; j++) {
            result = min(result, triangle[n - 1][j]);
        }

        return result;
    }
};
